html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#harden
webpage <- read_html(web_links[2])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
View(hrd_bio)
webpage <- read_html(web_links[3])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
stp_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
View(stp_bio)
webpage <- read_html(web_links[4])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
dur_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
View(dur_bio)
runApp()
rm(list = ls())
runApp()
rm(list = ls())
library(rvest)
library(magrittr)
#read HTML code from the websites
web_links <- c("https://en.wikipedia.org/wiki/LeBron_James", "https://en.wikipedia.org/wiki/James_Harden",
"https://en.wikipedia.org/wiki/Stephen_Curry", "https://en.wikipedia.org/wiki/Kevin_Durant")
webpage <- read_html(web_links[1])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#harden
webpage <- read_html(web_links[2])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#curry
webpage <- read_html(web_links[3])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
stp_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#durant
webpage <- read_html(web_links[4])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
dur_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
save.image("lbj_bio.RData")
save.image("hrd_bio.RData")
save.image("stp_bio.RData")
save.image("dur_bio.RData")
runApp()
rm(list = ls(9))
rm(list = ls())
shiny::runApp()
rm(list = ls())
# shot data forlebron
source("player_id.R")
playerID <- player_id[1]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
###################
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_lbj <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
save.image(file = "df_lbj.RData")
rm(list = ls())
load(df_lbj.RData)
load("df_lbj.RData")
save.image(df_lbj, "df_lbj.RData")
source("player_id.R")
playerID <- player_id[1]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
###################
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_lbj <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
rm(list = ls())
source("player_id.R")
playerID <- player_id[1]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
###################
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_lbj <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
runApp()
rm(list = ls())
runApp()
rm(lisr = ls())
rm(list = ls())
source("player_id.R")
playerID <- player_id[1]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_lbj <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
save.image(df_lbj, "lebron_stats.RData")
save.image(list = c(df_lbj), "lebron_stats.RData")
save.image(c(df_lbj), "lebron_stats.RData")
save(df_lbj, "lebron_stats.RData")
save(df_lbj, file ="lebron_stats.RData")
rm(list = ls())
source("player_id.R")
playerID <- player_id[2]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_hrd <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
save(df_hrd, file = "harden_stats.RData")
playerID <- player_id[4]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_dur <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
save(df_dur, file = "durant_stats.RData")
playerID <- player_id[3]
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
####################
basic_stat <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_stat[[i]][[j]] <- rjson::fromJSON(file = paste0("https://stats.nba.com/stats/playerdashboardbyyearoveryear?DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=", playerID[i], "&PlusMinus=N&Rank=N&Season=", season[j],"&SeasonSegment=&SeasonType=Regular+Season&ShotClockRange=&Split=yoy&VsConference=&VsDivision=", sep = ""), method = "C")
}
}
basic_Stats <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
basic_Stats[[i]][[j]] <- data.frame(matrix(unlist(basic_stat[[i]][[j]]$resultSets[[1]][[3]]), ncol=65, byrow = TRUE))
# shot data headers
colnames(basic_Stats[[i]][[j]]) <- basic_stat[[i]][[j]]$resultSets[[1]][[2]]
}
}
#to create dataframe for each player.
df_stp <- ldply(basic_Stats[[1]], data.frame)[ , c(2, 4, 6, 7, 8,22, 23, 24, 25, 26, 29, 31)]
save(df_stp, "curry_stats.RData")
save(df_stp, file ="curry_stats.RData")
runApp()
library(rvest)
web_links <- c("https://en.wikipedia.org/wiki/LeBron_James", "https://en.wikipedia.org/wiki/James_Harden",
"https://en.wikipedia.org/wiki/Stephen_Curry", "https://en.wikipedia.org/wiki/Kevin_Durant")
webpage <- read_html(web_links[1])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#harden
webpage <- read_html(web_links[2])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#curry
webpage <- read_html(web_links[3])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
stp_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
#durant
webpage <- read_html(web_links[4])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
dur_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
names(dur.bio)
names(dur_bio)
names(dur_bio) <- c("FIELD", "")
names(dur_bio)
save(lbj_bio , file ="lbj_bio.RData")
save(hrd_bio ,file ="hrd_bio.RData")
save(stp_bio, file ="stp_bio.RData")
save(dur_bio, file ="dur_bio.RData")
runApp()
library(rvest)
web_links <- c("https://en.wikipedia.org/wiki/LeBron_James", "https://en.wikipedia.org/wiki/James_Harden",
"https://en.wikipedia.org/wiki/Stephen_Curry", "https://en.wikipedia.org/wiki/Kevin_Durant")
webpage <- read_html(web_links[1])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
names(lbj_bio) <- c("FIELD", "PLAYER")
#harden
webpage <- read_html(web_links[2])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
names(hrd_bio) <- c("FIELD", "PLAYER")
#curry
webpage <- read_html(web_links[3])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
stp_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
names(stp_bio) <- c("FIELD", "PLAYER")
#durant
webpage <- read_html(web_links[4])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
dur_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 12, 13), ]
names(dur_bio) <- c("FIELD", "PLAYER")
save(lbj_bio , file ="lbj_bio.RData")
save(hrd_bio ,file ="hrd_bio.RData")
save(stp_bio, file ="stp_bio.RData")
save(dur_bio, file ="dur_bio.RData")
rm(list = ls())
runApp()
library(rvest)
web_links <- c("https://en.wikipedia.org/wiki/LeBron_James", "https://en.wikipedia.org/wiki/James_Harden",
"https://en.wikipedia.org/wiki/Stephen_Curry", "https://en.wikipedia.org/wiki/Kevin_Durant")
webpage <- read_html(web_links[1])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
View(table3)
View(table3)
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11, 13), ]
View(lbj_bio)
web_links <- c("https://en.wikipedia.org/wiki/LeBron_James", "https://en.wikipedia.org/wiki/James_Harden",
"https://en.wikipedia.org/wiki/Stephen_Curry", "https://en.wikipedia.org/wiki/Kevin_Durant")
webpage <- read_html(web_links[1])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
lbj_bio <- table3[c(3, 5, 6, 7, 8, 10, 11), ]
names(lbj_bio) <- c("FIELD", "PLAYER")
#harden
webpage <- read_html(web_links[2])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
hrd_bio <- table3[c(3, 5, 6, 7, 8, 10, 11), ]
names(hrd_bio) <- c("FIELD", "PLAYER")
#curry
webpage <- read_html(web_links[3])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
stp_bio <- table3[c(3, 5, 6, 7, 8, 10, 11), ]
names(stp_bio) <- c("FIELD", "PLAYER")
#durant
webpage <- read_html(web_links[4])
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F, fill = T)
table1 <- table[[1]]$X1
table2 <- table[[1]]$X2
#as.data.frame
table3 <- as.data.frame(cbind(table1, table2))
dur_bio <- table3[c(3, 5, 6, 7, 8, 10, 11), ]
names(dur_bio) <- c("FIELD", "PLAYER")
save(lbj_bio , file ="lbj_bio.RData")
save(hrd_bio ,file ="hrd_bio.RData")
save(stp_bio, file ="stp_bio.RData")
save(dur_bio, file ="dur_bio.RData")
rm(list = ls())
runApp()
shiny::runApp()
rm(list = ls())
data <- fread("3518 010714-311215.txt", sep = "|", na.strings="", select = c("CoCd", "Customer", "Clrng date","Clrng doc.", "DocumentNo", "Pstng Date",
"Doc. Type","D/C","Bline Date", "Payt Terms","Day1", "Day2","LC2 amount"))
library(data.table)
data <- fread("3518 010714-311215.txt", sep = "|", na.strings="", select = c("CoCd", "Customer", "Clrng date","Clrng doc.", "DocumentNo", "Pstng Date",
"Doc. Type","D/C","Bline Date", "Payt Terms","Day1", "Day2","LC2 amount"))
rm(list = ls(all = TRUE))
gc()
Packages <- c("data.table", "lubridate", "bit64", "rpart", 'randomForest', 'plotrix', 'AUC')
apply(as.matrix(Packages),1,function(x){
if (!is.element(x, installed.packages()[,1]))
install.packages(x, dep = TRUE)
require(x, character.only = TRUE)
})
Sys.setlocale('LC_ALL','C')
# Read  data
data <- read.table("data/3502 010714-311215.txt", header = FALSE, sep = "|",
col.names = paste0("V",seq_len(51)), fill = TRUE)
runApp()
rm(list = ls())
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
set_config( config( ssl.verifypeer = 0L ) )
options(shinyapps.service_url = "http://api.shinyapps.io/v1")
runApp()
install.packages("rsconnect")
install.packages("rsconnect")
rm(list = ls())
library(RCurl)
options(RCurlOptions = list(proxy = "http://user:pwd@proxy:port"))
options(shinyapps.http = "rcurl")
shiny::runApp()
shiny::runApp()
rm(list = ls())
runUrl('https://github.com/alexsuarez94/School_projects/nba/nba_shot_analytics.rar')
runUrl('https://github.com/alexsuarez94/School_projects/nba/nba.zip')
shiny::runApp()
rm(list = ls())
runApp()
install.packages("plyr")
runApp()
install.packages("hexbin")
library(shiny)
library(shinydashboard)
library(ggplot2)
library(RCurl)
library(grid)
library(jpeg)
library(hexbin)
library(plyr)
library(shinyjs)
library(gridExtra)
library(rjson)
library(jsonlite)
runApp()
shiny::runApp()
library(shiny)
rm(list = sl())
rm(list = ls())
library(shiny)
runApp("nba")
getwd()
runApp("nba.zip")
dir()
runApp("/nba.zip")
runApp()
