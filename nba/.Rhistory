shiny::runApp('C:/Users/alejandro.suarez/Desktop/Webscrapping/My_webscrapping/nba')
runApp('C:/Users/alejandro.suarez/Desktop/Webscrapping/My_webscrapping/nba')
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
if (!require(rjson)) install.packages("rjson")
playerID <- c(201939, 2544)
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
shotURL <- paste0("http://stats.nba.com/stats/shotchartdetail?Period=0&VsConference=&LeagueID=
00&LastNGames=0&TeamID=0&Position=&Location=&Outcome=&ContextMeasure=FGA&DateFrom=&StartPeriod=
&DateTo=&OpponentTeamID=0&ContextFilter=&RangeType=&Season=",season,"&AheadBehind=&PlayerID=", playerID,"&EndRange=
&VsDivision=&PointDiff=&RookieYear=&GameSegment=&Month=0&ClutchTime=&StartRange=&EndPeriod=&SeasonType=Regular
+Season&SeasonSegment=&GameID=&PlayerPosition=", sep = "")
shotData <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
shotData[[i]][[j]] <- fromJSON(file = paste0("http://stats.nba.com/stats/shotchartdetail?Period=0&VsConference=&LeagueID=
00&LastNGames=0&TeamID=0&Position=&Location=&Outcome=&ContextMeasure=FGA&DateFrom=&StartPeriod=
&DateTo=&OpponentTeamID=0&ContextFilter=&RangeType=&Season=",season[j],"&AheadBehind=&PlayerID=", playerID[i],"&EndRange=
&VsDivision=&PointDiff=&RookieYear=&GameSegment=&Month=0&ClutchTime=&StartRange=&EndPeriod=&SeasonType=Regular
+Season&SeasonSegment=&GameID=&PlayerPosition=", sep = ""), method="C")
}
}
str(shotData)
rm(list = ls())
url <- "http://mlb.mlb.com/pubajax/wf/flow/stats.splayer?season=2018&sort_order=%27desc%27&sort_column=%27avg%27&stat_type=hitting&page_type=SortablePlayer&team_id=109&game_type=%27R%27&player_pool=ALL&season_type=ANY&sport_code=%27mlb%27&results=1000&recSP=1&recPP=50"
mlb <- fromJSON(file = url)
str(mlb)
rm(list = ls())
playerID <- c(201939, 2544)
season <- c("2014-15", "2015-16", "2016-17", "2017-18")
shotURL <- paste0("http://stats.nba.com/stats/shotchartdetail?Period=0&VsConference=&LeagueID=
00&LastNGames=0&TeamID=0&Position=&Location=&Outcome=&ContextMeasure=FGA&DateFrom=&StartPeriod=
&DateTo=&OpponentTeamID=0&ContextFilter=&RangeType=&Season=",season,"&AheadBehind=&PlayerID=", playerID,"&EndRange=
&VsDivision=&PointDiff=&RookieYear=&GameSegment=&Month=0&ClutchTime=&StartRange=&EndPeriod=&SeasonType=Regular
+Season&SeasonSegment=&GameID=&PlayerPosition=", sep = "")
shotData <- rep( list(rep(list(list()), length(season))), length(playerID) )
for (i in 1:length(playerID)){
for (j in 1:length(season)){
shotData[[i]][[j]] <- fromJSON(file = paste0("http://stats.nba.com/stats/shotchartdetail?Period=0&VsConference=&LeagueID=
00&LastNGames=0&TeamID=0&Position=&Location=&Outcome=&ContextMeasure=FGA&DateFrom=&StartPeriod=
&DateTo=&OpponentTeamID=0&ContextFilter=&RangeType=&Season=",season[j],"&AheadBehind=&PlayerID=", playerID[i],"&EndRange=
&VsDivision=&PointDiff=&RookieYear=&GameSegment=&Month=0&ClutchTime=&StartRange=&EndPeriod=&SeasonType=Regular
+Season&SeasonSegment=&GameID=&PlayerPosition=", sep = ""), method="C")
}
}
shotDataf <- rep( list(rep(list(list()), length(season))), length(playerID) )
# unlist shot data, save into a data frame
for (i in 1:length(playerID)){
for (j in 1:length(season)){
shotDataf[[i]][[j]] <- data.frame(matrix(unlist(shotData[[i]][[j]]$resultSets[[1]][[3]]), ncol=24, byrow = TRUE))
# shot data headers
colnames(shotDataf[[i]][[j]]) <- shotData[[i]][[j]]$resultSets[[1]][[2]]
# covert x and y coordinates into numeric
shotDataf[[i]][[j]]$LOC_X <- as.numeric(as.character(shotDataf[[i]][[j]]$LOC_X))
shotDataf[[i]][[j]]$LOC_Y <- as.numeric(as.character(shotDataf[[i]][[j]]$LOC_Y))
shotDataf[[i]][[j]]$SHOT_DISTANCE <- as.numeric(as.character(shotDataf[[i]][[j]]$SHOT_DISTANCE))
}
}
# have a look at the data to check if the loop are ok.
View(shotDataf[[1]][[3]])
